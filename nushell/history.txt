c
clear
l
clear
ls
ll
clear
ls -l
ls clear
clear
ls
ls -l
ls -la
clear
cat .zshrc
clear
l
z ..
clear
ls
pwd
ll
cd .config/nushell/
c
clear
ls
clear
ls
vim config.nu
nvim config.nu
seq
sq 1
clear
l
nvim config.nu
l
clear
ls
alias l = ls
l
ll
l
cp ~/.zshrc .
l
clear
ls
nvim .zshrc
l
clear
l
mv config.nu config.n
l
clear
ls
z .config/
clear
z .config/
cd .config
ls
cd nushell/
clear
ls
nvim config.nu
c
clear
ls
cd .config/nushell/
ls
nvim config.nu
c
l
ls
l
ls
clear
ls
cd .config/nushell/
c
ls
nvim config.nu
cd .config/nushell/
l
cd ..
l
ll
c
ll
c
l
c
l
vim .zshrc
c
l
c
ls
c
$env
$env | table
$env | table -e
clear
ls
c
l
less
c
clear
ls
clear
l
ls
cd nu
cd nushe
cd nushell
cd .config/nushell/
c
l
c
ps
c
man ls
c
man table
table -h
ps | table -d
ps | table -c
c
table -l
table -h
table -l
cd .config/nushell/
c
l
ll
ll ..
autoview -h
autoview
view
ls | view  | less
ls 
c
ll .. | bat
ll .. | less
ll ..
ll
c
ll
ll ..
ll /
c
ll /
table-pager
c
cat .zshrc
cat .zshrc | table
cat .zshrc | table-view
c
ps
ps | bat
ps | sort-by pid
i
vim config.nu
cd .config/nushell/
l
vim config.nu
lsd
exa
exa --icons
exa --icons | table
exa --icons | table-view
cat .zshrc | table-view
cat .zshrc | table
cat .zshrc | tabulate 
cat .zshrc | table 
c
l
exa --icons | table
l
c
l
c
exi
vim config.nu
clea
rc
c
clear
ls
c
l
c
ls
z variables/
l
cd variables/
l
c
l
c
ls
c
cd .config/
c
l
cd nushell/
c
l
mv config.nu ahmed
mv config.n config.nu
vim config.nu
$nu.env-path
vim enu.nu
vim env.nu
l
cd nushell/
c
clear
ls
cd .conda/
z ..
cd ..
c
l
clear
ls
cd .config/
ls
cd nushell/
c
clear
ls
vim config.nu
nvim config.nu
l
c
l
cd .config/
c
l
cd nushell/
c
l
nvim history.txt
c
l
nvim env.nu
cd .config/
ls
cd  nushell/
ls
nvim env.nu
vim env.nu
nvim env.nu
cd .config/
ls
cd nushell/
l
config nu
cd .config/
ls
cd nushell/
l
c
l
vim config.nu
c
l
cd .config/
ls
cd nushell/
c
l
vim env.nu
cd .config/nushell/
ls
vim config.nu
vim env.nu
c
l
cd .config/nushell/
l
vim env.nu
l
cd .config/
ls
cd lvim
ls
..
l
cd Code/
l
cd `Local Storage/`ls
cd logs/
ls
..
ls
l
..
cd nushell/
ls
vim env.nu
c
cd
cd ..
l
cd ..
l
cd 
cd .config/
ls
cd nushell/
ls
vim config.nu
vim env.nu
cd .config/
ls
cd nushell/
ls
vim env.nu
c
l
nvim env.nu
c
cd .config/
ls
l
cd nushell/
c
l
vim config.nu
vim env.nu
$env.pwd
$env.PWD
man pwd
man pwd -L
$env.PWD -L
$env.PWD -l
pwd -l
pwd -L
basename
man basename
man basename "$PWD"
basename "$PWD"
basename $PWD
basename {PWD}
basename $env.PWD
vim env.nu
l
cd .config/
cd nushell/
nvim env.nu
cd .config/
ls
cd nvim/
ls
c
l
z ..
c
$nu.env-path
$nu.config-path
vim env.nu
vim config.nu
c
source ~/.zoxide.nu
z .config
cd .config
c
l
vim env.nu
vim config.nu
c
l
madfd
c
l
zoxide init
zoxdie init nushell
man zoxide
zoxide init
zoxide init nu
cd
l
vim .zoxide.nu
zoxide init nushell
nu --version
zoxide --version
sudo apt purge zoxide
cargo install zoxide --locked
c
zoxdie --version
zoxide
zoxide -v
zoxide init nushell | save -f ~/.zoxide.nu
l
z .config/
cd .config/
ls
cd nushell/
ls
vim config.nu
z .config/
ls
z nushell
ls
c
..
ls
c
l
..
c
z nushell
c
l
c
l
..
c
l
c
l
c
l
c
l
z nu
l
vim env.nu
mysql
mysql -u ahmed -p
c
l
c
l
c
ll
c4
c
lla
c
ll-a
c
vim .zshrc
z nus
c
l
vim config.nu
c
ll
lla
c
lla
c
l
z data
l
z courses/
l
z embedded-systems/
l
z rust
l
z projects/
l
z variables/
l
z src/
l
..
l
c
l
cat src/main.rs
c
l
exa -icons
exa --icons
exa --icons | table
fc
c
ps
ps | bat
ps | less
c
l
c
l
ll
c
l
cat articles1.csv | table
c
l
table articles1.csv
table -h
c
l
c
l
./articles1.csv | table 
sudo ./articles1.csv | table
c
l
c
l
c
l
c
l
z projects/
l
z variables/
l
c
l
cargo run
vim src/main.rs
c
cargo run
c
cargo build
l
cargo build
cargo build --release
vim src/main.rs
c
l
cargo build
c
cargo run
cargo build --release
l
./target/release/variables
vim src/main.rs
c
l
cargo build --release
cat ./src/main.rs
cargo build
vim src/main.rs
cargo build
c
cargo run
cargo build --release
./target/release/variables
l
conda
conda activate base
/opt/anaconda3/bin/conda activate base
length 
l
ll
c
l
vim src/main.rs
d
c
l
vim src/main.rs
cargo build --release
cargo build
c
./target/release/variables
c
l
z variables/
l
c
l
vim main.rs
nvim main.rs
c
l
c
l
c
l
cargo run
c
z variables/
l
vim main.rs
cargo run
scalar types
# compund types
# scalar types
vim main.rs
cargo run
vim main.rs
c
l
cargo run
l
vim main.rs
cargo run
vim main.rs
c
l
cargo run
c
cargo run
c
cargo run
c
l
c
l
z Downlo
c
l
c
l
c
l
c
l
c
l
sudo unzip Meslo.zip
l
rm *tff
rm *ttf
l
rm *md
l
rm *txt
sudo cp Meslo.zip ~/.local/share/fonts/
z ~/.local/share/fonts
c
l
unzip Meslo.zip
c
exi
z ~/.local/share/fonts
l
rm *txt
rm *md
rm *tff
rm *ttf
c
l
mkdir MesloLGS
mv Meslo.zip MesloLGS/
z MesloLGS/
c
l
unzip Meslo.zip
z ~/.local/share/fonts
c
l
z MesloLGS/
l
c
l
c
l
c
l
z rust
c
l
z projects/
c
l
z variables/
c
l
z src/
c
l
clc
c
l
z rust
cl
c
l
z projects/
c
l
z variables/
c
l
c
code .
ll
..
ll
clear
ls
clear
ls
clear
ls
clear
l
c
l
c
l
c
vim main.rs
hx main.rs
c
cl
c
l
cat university_ID
c
l
c
l
c
l
c
l
c
l
c
l
 rm -rf /usr/local/go && tar -C /usr/local -xzf go1.20.4.linux-amd64.tar.gz
c
l
rf `20201700096.pdf`
c
l
rf keyboard.png
r keyboard.webp
c
l
rf keyboard.webp
c
l
unzip sioyek-release-linux.zip
l
sudo chmod u+x Sioyek-x86_64.AppImage
ll
sudo mv Sioyek-x86_64.AppImage /usr/bin/sioyek
sioyek
z
c
l
vim .zshrc
z 
z .config/
z nushell/
c
l
vim config.nu
c
l
z
c
z emb
c
l
z go/
c
l
sk the-go-programming-language.pdf
c
l
c
l
ll
z go
l
z pkg
l
z mod
l
z golang.org/
l
z x/
l
z exp
l
z typeparams@v0.0.0-20221031165847-c99f073a8326/
l
z common.gol
z common.go
l
cat common.go
c
l
vim main.rs
c
l
..
c
l
...
.....
c
..
z 
c
...
.
z
.
..
z
...
z 
z .config/
....
vim z
z
z ...
c
l
z
c
ll
z
c
psc
 
c
pwd
z .config/
l
c
pwd
z nautilus/
pwd
c
l
pwd
z ....
z -
pwd
z .....
c
l
c
pwd
l
ll
z run
l
c
l
c
ll
lsd
exa --icons
c
l
c
exa --icons --icons
c
exa --icons --icons -l
ll
..
l
c
z
c
l
c
l
c
ll
c
ll
c
l
ll
c
ls
c
l
c
l
exi
eixt
c
l
c
l
z data
c
l
z dev
c
l
z fcis-projects/
c
l
git clone https://github.com/ahmed-yasser1/Game-Application-Success-Prediction.git
l
z Game-Application-Success-Prediction/
c
l
rm game_predictor-Classification.ipynb
l
gs
c
git status
git add .
git commit -m "remove old nootbook"
git status
git push
c
l
c
l
c
l
z shco
z algo
l
z assignments/
c
l
z `School Quiz II/`
c
l
cl
llll
vim .zshrc
l
go
c
l
which nu
sudo usermod -s /home/ahmed/.cargo/bin/nu
sudo usermod -s /home/ahmed/.cargo/bin/nu ahmed
l
clear
conda activate base
c
z rust
l
z pro
z -
z projects/
l
z learning/
l
code .
ls
clear
ls
c
l
clear
ls
c
ls
c
ls
c
l
python -m pip install 'xonsh[full]'
python3 -m pip install 'xonsh[full]'
l
z go
c
l
z bin
c
l
z
c
l
z sys
c
l
z go
c
l
z projects/
c
l
z learning/
cl
c
l
z src/
c
l
cat main.go
c
l
c
l
c
i
alias i
c
l
vim main.rs
c
l
c
....................
c
c
lcc
c
l
c
l
z
clzc
z 
c
z fcis
clc
z
c
l
z data
c
l
z downlod
c
z downloads
c
l
z
z data
c
l
ls
c
ls
ntfsfix
z Down
c
l
z ventoy-1.0.91-linux.tar.gz
z ventoy-1.0.91/
c
l
./VentoyWeb.sh
sudo ./VentoyWeb.sh
c
l
sudo ./VentoyWeb.sh
l
suod ./Ventoy2Disk.sh
z ventoy-1.0.91/
z Down
c
z Downlo
c
l
z ventoy-1.0.91/
c
l
c
l
c
z fcis
z 
z data
c
l
z fcis
c
l
z `6-term/`
c
l
z software/
c
l
unzip Labs-20230404T060211Z-001.zip
l
c
l
rm *zip
c
l
z Labs/
c
l
..
rf Labs/
l
unzip labs.zip
l
rm *zip
c
l
z Labs/
c
l
z lab6
ranger
mysql -u ahmed -p
c
l
z Down
c
l
sudo dpkg --install dbeaver-ce_23.0.4_amd64.deb
c
clear
ls
cargo install zoxide --locked
apt-get install libgl1-mesa-glx libegl1-mesa libxrandr2 libxrandr2 libxss1 libxcursor1 libxcomposite1 libasound2 libxi6 libxtst6
sudo apt-get install libgl1-mesa-glx libegl1-mesa libxrandr2 libxrandr2 libxss1 libxcursor1 libxcomposite1 libasound2 libxi6 libxtst6
clear
ls
ll
clear
ls
ll
l
cd .config/
ls
cd nushell/
ls
rm env
nv config.nu
nvim config.nu
ll
ls
ll
l
zoxide init nushell | save -f ~/.zoxide.nu
ls
l
ll
l
vim main.rs
..
z 
ls
z .config/
ls
..
ls
c
l
touch demo.md
ls
clear
ls
open demo.md
echo "## Main Header" >> demo.md
open demo.md
cat demo.md
suod apt install bat
sudo apt install bat
cd .config/
ls
cd
cd Downloads/
c
ls
l
cargo install bat
cd Downloads/
l
oepn .
.
tar xf ideaIC-2023.1.2.tar.gz
sudo dpkg --install codepage code_1.78.2-1683731010_amd64.deb
ls
sudo dpkg --install  code_1.78.2-1683731010_amd64.deb
l
sudo ./Anaconda3-2023.03-1-Linux-x86_64.sh
ls
sudo ./Anaconda3-2023.03-1-Linux-x86_64.sh
ll
chmod u+x Anaconda3-2023.03-1-Linux-x86_64.sh
clear
ls
sudo ./Anaconda3-2023.03-1-Linux-x86_64.sh
clear
conda
bash
clear
ls
c
ll
ls
sudo mv idea-IC-231.9011.34/ /opt
z opt
s
ls
z /opt
ls
z idea-IC-231.9011.34/
ls
ll
z bin/
ls
c
l
source /opt/anaconda3/bin/activate base
l
clear
ls
bash
ls
z src
ls
mkdir src
rm demo.md
z src/
ls
git clone https://github.com/SylEleuth/gruvbox-plus-icon-pack.git
c
l
z gruvbox-plus-icon-pack/
ls
cp -rv gruvbox-plus-icon-pack-master ~/.local/share/icons/GruvboxPlus
..
cp -rv gruvbox-plus-icon-pack-master ~/.local/share/icons/GruvboxPlus
l
cp -rv gruvbox-plus-icon-pack ~/.local/share/icons/GruvboxPlus
rf ~/.local/share/icons/GruvboxPlus/
cp -rv gruvbox-plus-icon-pack ~/.local/share/icons/GruvboxPlus
cd .config/
ls
clear
cd Downloads/
ls
sudo mv *ttf /usr/local/share/fonts
ls
c
l
tar xf gruvbox-plus-icon-pack.tar.gz
l
suod mv gruvbox-plus-icon-pack /usr/share/icons/
sudo mv gruvbox-plus-icon-pack /usr/share/icons/
l
unzip Windows.zip
l
.
bash
c
l
sudo mv Cap* /usr/share/icons
l
sudo mv /usr/share/icons/Cap* /usr/share/themes/
sudo mv /usr/share/themes/Cap* /usr/share/icons/
z /usr/share/icons/
l
sudo cp -r ./Cap* ~/.local/share/icons/
l
z .config/
l
mkdir Audio
mv Audio/ audio
mkdir pictures
mkdir templates
mkdir downloads
l
rf Music/ 
rf Pictures/
rf Videos/
rf Documents/
rf Desktop/
rf Public/
c
l
rf Templates/
c
l
mv Downloads/* downloads/
l
z Down
l
..
rf Downloads/
c
l
mkdir videos
kc
c
l
mkdir volatile
l
c
z volatile/
l
mkdir Documents
mkdir Public
mkdir Desktop
..
c
l
nvim user-dirs.dirs
l
mkdir tutorial
z tutorial/
mkdir fcis
z fcis
mkdir 6-term
..
c
..
c
l
c
l
c
l
c
l
c
l
mkdir dev
l
z dev
c
l
mkdir fcis-projects
..
c
l
z dev
c
l
..
c
l
z tutorial/
l
mkdir rust
mkdir c-lang
mv rust/ rust-lang
c
l
mv rust-lang/ rust
c
l
..
l
suod apt install gitmoji
npm i -g gitmoji-cli
npm install -g npm
sudo apt install npm
npm install -g npm
sudo npm install -g npm
sudo apt install node
sudo apt install nodejs
node --version
sudo npm install -g npm
suod apt install nvm
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
nvm
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"<\n>[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
bash
nvm
c
nvm install NEW_VERSION --reinstall-packages-from=OLD_VERSION
node --version
bash
c
git-moji
bash
c
sudo apt purge nodejs
c
npm --version
node --version
c
cd downloads/
l
tar xf node-v18.16.0-linux-x64.tar.xz
l
z node-v18.16.0-linux-x64.tar.xz
l
z node-v18.16.0-linux-x64/
l
z bin/
l
z node
..
l
..
z down
rf node-v18.16.0-linux-x64/
..
c
l
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
nvim .bashrc
wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
bash
nvm
bash nvm --version
c
l
sudo apt install telegram-desktop
rustup
rustup docs
z down
l
sudo dpkg --install distro-info discord-0.0.27.deb
sudo dpkg --install  discord-0.0.27.deb
bash
c
git-moji 
bash
c
z dev
l
..
l
rf package-lock.json
rf package.json
l
rf node_modules/
l
z dev
l
c
l
mkdir c-lang
mkdir rust
z rust
l
cargo new learn
l
cargo run
ls
man get
man se
man set
get -h
c
get -h
$env | gep -s Path
$env | get -s Path
$env | get -s PATH
[4, 5, 6] | get 0
[4, 5, 6] | get 1
[4, 5, 6] | get 3
[4, 5, 6] | get -1
[4, 5, 6] | get 2
c
help get
help get | less
help get | bat
[{A: A0}]
[]
[{}]
[{A, B, C}]
[{A: [A0, A1, A2]}, {B: [B0, B1]}]
[{A}, {B}]
[{A: A0}, {B: B0}]
ls
ll
z /bin
l
l | bat
z | less
z -
l | less
c
help table-pager
ps aux 
ps aux
ps --aux
man ps
ps a
ps
ps | bat
ps | where status = 'Sleeping'
ps | where status == 'Sleeping'
qq
ps | where status == 'Sleeping'
ps | where status == "Sleeping"
c
ps
c
date
help data
help date
data today -h
date today -h
help data today
c
date today
c
help date
date today
c
date now
help date
date list-timezone
help date
date now | data to-table
date now | date to-table
date now
sys
c
sys get
c
sys
sys | get host
c
help save
c
l
z templates/
c
l
c
echo "hello" > demo.md
l
echo ahemd
echo "hello" | save demo.md
l
cat demo.md
rm demo.md
c
l
c
echo "hello" | save demo.md
echo ",world" | save demo.md
echo ",world" | save -f demo.md
cat demo.md
echo "hello" | save demo.md
echo "hello" | save -f demo.md
cat demo.md
echo ",world" | save -a demo.md
cat demo.md
c
-5 | descripe
-5 | describe
"-5" | describe
'-5' | describe
'-5' | into int
'-5' | into int | describe
l
c
c
1.2 | describe
"-1.4445" | into decimal | describe
# string interpolation
$"6 + 7"
$"6 + 7 = (6+7)"
$"6 + 7 = (6 + 7)"
$"6 + 7 = (6 + 7)" # dynamic string interpolation
let x = 4
x
$x
let x = 5;
$x
echo x
echo $x
$x
c
l
2 > 1
2 < 1
2 == 2
3 == 2
3 == 2 # this boolean value either true or false
# dates are in three forms
# 1. data --> 2022-02-02
# 2. date and time --> 2022-02-02T14:30:00
# 3. data and time with timezone --> 2022-02-02T14:30:00+05:00
rf demo.md
c
l
..
c
l
z .config/
ls
vim user-dirs.dirs
nvim user-dirs.dirs
..
l
mv volatile/ .volatile
l
ll
c
ll
la
lla
c
l
# 1. date --> 2023-05-19
# 2. date and time --> 2023-05-19T10:23:00+02:00
# date and time and timezone
c
1ns
1us
1ms
1sec
1min
1hr
1day
1wk
3.25day
1..3
[1, 2, 3]
1...2
1...5
1..2
1..>2
1..<2
1..10
1..<10
c
# inclusive range from 1 to 10 (10 is included in the list)
1..10
# non-inclusive range from 1 to 10 (10 is not included in the list)
1..<10
0b[11]
# structured data --> 1. records 2. lists 3. tables
{"name": ahmed, "age": 20}
{name: ahmed, age: 15}
# record = one row in a table
{name: ahmed, age: 15}
{name: ahmed, age: 15} | insert salary 30000
# list = 1 column in a table
[1, 2, 3, 4]
{name: ahmed, age: 15}.name
let person = {name: ahmed, age: 15}
person
$person
$person.name
$person.age
c
$it
[bell, book, candle] | where ($it =~ 'b')
[bell, book, candle] | where ($it =~ 'c')
[bell, book, candle] | where ($it =~ 'a')
[bell, book, candle] | where ($it =~ 'm')
let l = [ahmed, ali, karim]
l
c
$l
$l | describe
let m = [1, 2, 3]
$m
$m | describe
$l.0
$l.1
$l.2
1..3
1..3 | describe
range 1..3
[a, b, c] | range 1..3
# list
[1, 2, 3, 4, 5]
[1, 2, 3, 4, 5] | describe
help range
range 4..7
[0,1,2,3,4,5] | range 4..5
[0,1,2,3,4,5] | range 4..<5
[0,1,2,3,4,5] | range 1
[0,1,2,3,4,5] | range [1]
c
[ [name, age, salary]; [ahmed, 20, 30000], [ali, 15, 29292] ]
# one column = list
# one row = record
{name: ahmed, age: 20, salary: 300000}
[ {name: ahmed, age: 21, salary: 30000}, {name: ali, age: 15, slary: 29292}    ]
[ {name: ahmed, age: 21, salary: 30000}, {name: ali, age: 15, salary: 29292} ]
[1, 2, 3, 4] | get 0
[1, 2, 3, 4] | get 1
let t = [ {name: ahmed, age: 21, salary: 30000}, {name: ali, age: 15, salary: 29292} ];
t
c
$t
$t | get 0
$t | get 0 | describe
c
ls
ll
ll | get 0
ll | get 0 | describe
c
git clone https://github.com/NvChad/NvChad ~/.config/nvim --depth 1 && nvim
git clone https://github.com/NvChad/NvChad ~/.config/nvim --depth 1 and nvim
git clone https://github.com/NvChad/NvChad ~/.config/nvim --depth 1 ; nvim
nvim
c
l
nvim
c
# Linux / Macos (unix)
rm -rf ~/.config/nvim
rm -rf ~/.local/share/nvim
# Windows
rd -r ~\AppData\Local\nvim
rd -r ~\AppData\Local\nvim-data
nvim
LV_BRANCH='release-1.3/neovim-0.9' bash <(curl -s https://raw.githubusercontent.com/LunarVim/LunarVim/release-1.3/neovim-0.9/utils/installer/install.sh)
z rust
l
z learn/
ls
vim 
sudo apt install vim
apt --fix-broken install
sudo apt --fix-broken install
vim
sudo apt install vim
ls
vim
z .config/nushell/
ls
vim config.nu
nvim config.nu
vim main.rs
z .config/
ls
l
mv JetBrainsMono-2.304/ /usr/share/fonts
mv JetBrainsMono-2.304/* /usr/share/fonts
cp -r JetBrainsMono-2.304/ /usr/share/fonts
suod cp -r JetBrainsMono-2.304/ /usr/share/fonts
sudo cp -r JetBrainsMono-2.304/ /usr/share/fonts
rf JetBrainsMono-2.304/
c
fc-cache -f -v
c
cargo run
c
cargo run
c
cargo run
c
cargo run
suod apt install gnome-clocks
sudo apt install gnome-clocks
c
c
cargo run
c
z .config/nushell/
c
l
vim config.nu
source ~/.config/nushell/config.nu
c
cr
ca
c
cr
c
cr
c
cr
c
cr
c
cr
c
cargo run
rustup docs
cargo install mdbook
c
println!("Hello, World!");<\n>
rust
z templates/
c
l
mbook init
c
l
z templates/
mbook init
z 
z .cargo
l
z bin
l
..
z temp
c
mdbook init my-first-book
c
l
z my-first-book/
l
z src
l
ll
..
l
z book
l
..
cat book.toml
c
l
mdbook serve --open
c
sudo apt purge neovim
mdbook serve --open
cd down
z down
c
l
chmod u+x nvim.appimage
sudo mv nvidia-detector /usr/bin/nvim
l
lc
c
ll
sudo mv nvidia-detector /usr/bin/nvim
sudo mv nvim.appimage /usr/bin/nvim
nvim --version
c
cr
z Down
c
l
ls
z downloads/
ls
tar xf jetbrains-toolbox-1.28.1.15219.tar.gz
ls
c
ls
z down
l
c
ls
e
c
ls
c
l
z fcis
l
z `6-term/`
c
l
unzip Concept-20230520T011228Z-001.zip
c
l
rf *zip
c
l
mv Concept/ concept/
z concept/
c
l
mv `Exams 😉/` exams
mv Labs/ labs
mv Lecs lecs
c
l
z labs
l
mv `Lab 8.pdf` lab8.pdf
mv `lab 9.pptx` lab9.pdf
c
l
..
l
z lecs
l
sudo apt install ranger
which feed
feed
redd
ranger
sudo apt purge ranger
rf ~/.config/ranger/
sudo apt install ranger
ranger
c
l
mv Lecture1.pdf lecture1.pdf
mv Lecture2.pdf lecture2.pdf
mv `Lec 10/` lecture10
mv `Lec 11/` lecture11
mv `Lec 3 + 4/` lecture3-4
mv `Lec 5/` lecture5
mv `lec 6/` lecture6
l
mv `lec 7/` lecture7
mv `lec 8/` lecture8
c
l
mv `lec 9/` lecture9
c
l
z lecture3-4/
l
mv `Lecture 3 + 4.pdf` lecture3-4.pdf
c
l
..
c
l
..
c
l
z labs/
c
l
open .
bash open 
bash open .
z nushe
l
vim config.nu
z labs
l
o
z labs
l
c
o
c
touch .ideavimrc
rust --version
rust
rusc --version
cargo --version
rustc -v
rustc --version
12345678901
c
ll
c
l
ll
c
ll
[1, 2, 3, 4, 5].0
let l = [karim, ahmed, 1, 2]
l
$l
$l | describe
ranger
z src
c
l
pwd
git clone https://github.com/archcraft-os/archcraft-skeleton.git
z archcraft-skeleton/
c
l
z archcraft-ranger/
c
l
z files/
l
z ranger/
l
..
l
mv ranger/ ~/.config
rm ~/.config/ranger/
mv ranger/ ~/.config/
z .config
ls
z ranger/
l
..
c
l
z src
c
l
..
c
l
z src/
c
l
rf archcraft-skeleton/
c
l
rf gruvbox-plus-icon-pack/
c
l
..
c
ranger
c
l
z nushel
c
l
vim config.nu
source ~/.config/nushell/config.nu
c
r
sudo apt install neofetch
neofetch
htop
sudo apt install htop 
htop
c
l
c
l
z ..
\c
l
c
..
c
suod apt install gpick
sudo apt install gpick
z fcis
l
z `6-term/`
c
l
z concept/
c
l
zc
l
z labs/
c
l
o
l
node .
c
node .
nod e.
c
node .
node 
c
node .
node 
node .
curl --proto '=https' --tlsv1.2 -sSf https://install.surrealdb.com | sh
surreal help
.surrealdb/surreal help
z nus
l
vim env.nu
$SHELL
$PWD
$env
$env.path
$env.PATH
vim config.nu
surreal help
z .config/nushell/
l
vim env.nu
vim config.nu
sur help
sur sql
source ~/.config/nushell/config.nu
sur isready
sur help
sur isready
sur sql
sur sql -h
sur sql --con http://localhost:8000 --user root --pass root -ns
sur sql --conn http://localhost:8000 --user root --pass root -ns
sur sql --conn http://localhost:8000 --user root --pass root --ns
sur sql --conn http://localhost:8000 --user root --pass root 
sur sql --conn http://localhost:8000 --user root --pass root --ns test --db test
sur sql --help
sur isredy
sur help
sur isready
sur sql --conn http://localhost:8000 --user root --pass root --ns test --db test
sur isready
sur sql
surreal start --log debug --user ahmed --pass ahmed memory
sur start
sur isready
sur sql
htop
sur sql --conn http://localhost:8000 --user ahmed --pass ahmed --ns test --db test
surreal start --log debug --user ahmed --pass ahmed memory
sur isready
su isready
sur isready
surreal start --log debug --user ahmed --pass ahmed memory
htop
c
node .
c
node .
ndoe .
node .
ndoe 
node .
node 
node .
c
node .
c
nod e.
node .
node 
node .
c
node .
.c
c
node .
c
node .
scala
scalt
scala
sbt
z rust
l
z learn/
c
l
z src/
l
vim main.rs
l
cargo run
l
cargo run
bah
c
bash
c
l
cargo run | save demm
c
l
rm demm
c
l
:q
z src
c
[[name, age, salary]; [ahmed, 21, 922], [karim, 38, 939]]
[{name: ahmed, age: 21, salary: 922}, {name: karim, age: 38, salary: 939}]
[{x: 12, y: 5}, {x: 2, y: 2}]
let t = [{x: 12, y: 5}, {x: 2, y: 2}];
[{x: 12, y: 5}, {x: 2, y: 2}].x
[{x: 12, y: 5}, {x: 2, y: 2}].y
ps
ps.ppid
ps
ps.name
ps | table | .name
ps | get 0
[{x: 12, y: 5}, {x: 2, y: 2}]
[{x: 12, y: 5}, {x: 2, y: 2}] | select x
[{x: 12, y: 5}, {x: 2, y: 2}].x
[{x: 12, y: 5}, {x: 2, y: 2}].x | describe
[{x: 12, y: 5}, {x: 2, y: 2}] | select x | describe
[{x: 12, y: 5}, {x: 2, y: 2}] 
[{x: 12, y: 5}, {x: 2, y: 2}] | select 0
[{x: 12, y: 5}, {x: 2, y: 2}] | select 1
[{x: 12, y: 5}, {x: 2, y: 2}] | select 0, 1
[{x: 12, y: 5}, {x: 2, y: 2}] | select 0 1
[{x: 12, y: 5}, {x: 2, y: 2}, {x: 84, y: 93}] | select 0 1
[{x: 12, y: 5}, {x: 2, y: 2}, {x: 84, y: 93}] 
[{x: 12, y: 5}, {x: 2, y: 2}, {x: 84, y: 93}] | select 0 2
sudo texlive
sudo apt install texlive-latex-extra -y
vim notes.md
l
c
l
vim main.rs
ll
c
ll
lla
cat .ideavimrc
vim .vimrc
vim main.r
vim .vimrc
c
l
vim history.txt
rm history.txt
c
l
vim notes.md
[{foo: 123}, {}]
[{foo: 123}, {}].foo
[{foo: 123}, {}].foo?
# optional cell paths
let greet = {|name| print $"Hello ($name)"}
do 
do $greet "Ahmed"
let greet = {|name| print $"Hello $name"}
do $greet "Ahmed"
let greet = {|name| print $"Hello ($name)"}
do $greet "Ahmed"
l
sudo apt install youtube-dl
l
z audio/
l
c
l
youtube-dl -x https://www.youtube.com/watch?v=nOroJh6qpqY&t=28s
sudo purge youtube-dl 
sudo apt purge youtube-dl 
python3 -m pip install --force-reinstall https://github.com/yt-dlp/yt-dlp/archive/master.tar.gz
pip
pip3
suod apt install pip
sudo apt install python3-pip
python3 -m pip install --force-reinstall https://github.com/yt-dlp/yt-dlp/archive/master.tar.gz
l
youtube-dl -x https://www.youtube.com/watch?v=nOroJh6qpqY&t=28s
z aud
youtube-dl -x https://www.youtube.com/watch?v=nOroJh6qpqY&t=28s
python3 -m pip install --force-reinstall https://github.com/yt-dlp/yt-dlp/archive/master.tar.gz
youtube-dl -x https://www.youtube.com/watch?v=nOroJh6qpqY&t=28s
yt-dlp -x https://www.youtube.com/watch?v=nOroJh6qpqY&t=28s
 pip uninstall youtube_dl
 pip uninstall yt-dlp
pip install git+https://github.com/ytdl-org/youtube-dl.git@master#egg=youtube_dl
youtube-dl -x https://www.youtube.com/watch?v=nOroJh6qpqY&t=28s
youtube_dl -x https://www.youtube.com/watch?v=nOroJh6qpqY&t=28s
youtube-dl -x https://www.youtube.com/watch?v=nOroJh6qpqY&t=28s
 pip uninstall youtube_dl
python3 -m pip install --force-reinstall https://github.com/yt-dlp/yt-dlp/archive/master.tar.gz
yt-dlp URL
 pip uninstall yt-dlp
c
sudo apt install y
sudo apt install youtube-dl
vim notes.md
vim .vim
vim .vimrc
curl -sLf https://spacevim.org/install.sh | bash
c
vim
curl -sLf https://spacevim.org/install.sh | bash
vim
rf ~/.SpaceVim/
vim
vim .vimrc
vim .vimrc_back
mv .vimrc_back .vimrc
vim
vim main.rs
l
rm main.rs
c
l
nvim
curl -sLf https://spacevim.org/install.sh | bash
vim
c
vim .SpaceVim/autoload/SpaceVim/custom.vim
mkdir .cache/SpaceVim
z .cache/SpaceVim/
mkdir conf
vim
rf ~/.SpaceVim/
mv .vimrc_back .vimrc
vim
l
c
ll
z
c
ll
c
lla
mv .vimrc_back .vimrc
l
vim notes.md
c
ls
vim
l
z tutorial/
c
l
z databases/
c
l
z donw
z down
l
z data
l
mdbook -h
mdbook init databases
c
l
rf databases/
mdbook init book
l
z book/
l
vim src/
z src/
l
vim chapter_1.md
unzip sioyek-release-linux.zip
l
chmod u+x Sioyek-x86_64.AppImage
l
./Sioyek-x86_64.AppImage
z nus
l
mv Sioyek-x86_64.AppImage /usr/bin/sioyek
suod mv Sioyek-x86_64.AppImage /usr/bin/sioyek
sudo mv Sioyek-x86_64.AppImage /usr/bin/sioyek
l
c
sioyek
sioyek & 
youtube-dl -x https://www.youtube.com/watch?v=nOroJh6qpqY&t=28s
vim config.nu
sudo apt install queued
sudo apt install tmux
:q!
tmux
c
ls
man tmux
 
c
suod apt install tlder
suod apt install tldr
l
..
l
sk fundamentals-of-db.pdf
sioyek fundamentals-of-db.pdf
mdbook serve --open
l
rm notes.md
z dev
l
z fcis-projects/
l
ll
z New/
l
..
c
l
mv New/ game-prediction
z game-prediction/
c
l
code .
l
mkdir classfification
mkdir regression
r
c
l
rm LabelEncoder OneHotEncodingList Random_Forest_model Standardization `Test Script.ipynb` game_predictor_Classification-Copy2.ipynb
l
z classfification/
l
..
z regression/
l
git clone https://github.com/samaasabri/Game-Application-Success-Prediction.git
z
mkdir .ssh
z .ssh/
c
ll
ssh-keygen -o -t rsa -C "github.com/ahmed-yasser1"
l
cat id_rsa.pub
z reg
l
git clone git@github.com:samaasabri/Game-Application-Success-Prediction.git
c
l
z Game-Application-Success-Prediction/
l
mv ./* ..
ll
..
c
l
rf Game-Application-Success-Prediction/
c
l
..
l
code .
z reg
l
..
l
rf regression/
mkdir regression
git clone git@github.com:ahmed-yasser1/Game-Application-Success-Prediction.git
l
mv Game-Application-Success-Prediction/* classfification/
rf Game-Application-Success-Prediction/
z classfification/
l
..
l
z regression/
l
..
c
l
rf ./*
mkdir classfification
mkdir regression
l
z regression/
l
git clone git@github.com:ahmed-yasser1/Game-Application-Success-Prediction.git
l
mv Game-Application-Success-Prediction/* .
l
rf Game-Application-Success-Prediction/
c
l
code .
l
z ..
c
l
z classfification/
l
mv New/* .
l
rf Neq
rf New/
c
l
code .
l
r
source /opt/anaconda3/bin/activate base
ls
c
pip3 install xgboost
python3
l
..
l
z classfification/
c
l
z report/
l
z Down
c
l
rm Preprocessing_Techniques.docx
l
z regres
l
..
c
l
rf regression/
git clone git@github.com:ahmed-yasser1/Game-Application-Success-Prediction.git
l
mkdir regression
mv Game-Application-Success-Prediction/* regression/
rf Game-Application-Success-Prediction/
l
z regression/
c
l
z game-prediction/
l
z regression/c
z report/
c
l
sk regression.pdf
o
sudo apt install pandoc
z report/
z reg
l
..
l
z report/
l
rm regression.pdf
pandoc -s regression.md -o regression.pdf
  
]]
pandoc -s regression.md -o regression.pdf
l
sk regression.pdf
l
z report/
z regres
..
ls
z report/
l
 z reg
l
c
l
open games-regression-dataset.csv
G
open games-regression-dataset.csv | bat
open games-regression-dataset.csv | less
open games-regression-dataset.csv | get date
open games-regression-dataset.csv | get date*
open games-regression-dataset.csv | less
o
z Down
l
o
htoop
z 
z down
l
z report/
z regression
l
z ..
l
z report
l
o
l
z game-prediction/
ls
z report/
l
z Down
l
z down
l
z Down
c
l
z Down
l
tar xf clear.zip
l
tar xf ModernCSV-Linux-v1.3.36.1.tar.gz
l
z moderncsv1.3.36.1/
l
o
chmod u+x install.sh
l
./install.sh
sudo 
suod ./install.sh
sudo ./install.sh
l
z re
l
z classfification/
l
o
l
z templates/
c
l
git clone git@github.com:ahmed-yasser1/Game-Application-Success-Prediction.git
o
l
z New/
l
o
l
rf New/
l
o
o
code .
git clone git@github.com:ahmed-yasser1/Game-Application-Success-Prediction.git
got add /
git add .
z Game-Application-Success-Prediction/
c
git add .
git commit -m "add final"
git status
git push
z rep
l
code l
code .
o
z rport
z rep
l
..
l
z deployment/
l
vim note.md
..
l
z report/
l
sudo shutdown
sudo shutdown now
l
rf New.rar New/
l
rf Game-Application-Success-Prediction/
z IdeaProjects/
l
..
l
rf IdeaProjects/
l
c
l
rf MLReport2.docx
l
c
l
z downloads/
l
unzip Topic_Modeling_NLP-20230522T111445Z-001.zip
l
mv Topic_Modeling_NLP ~/dev/fcis-projects/
z fcis
l
rf CS-13.zip
c
l
z Topic_Modeling_NLP/
l
rf nushell/
l
bash
c
l
..
l
zip Topic_Modeling_NLP/
l
zip Topic_Modeling_NLP/ TopicModeling.zip
o
z Topic_Modeling_NLP/
z fcis
l
..
l
git clone git@github.com:salllwaaa/Topic_Modeling_NLP.git
z Topic_Modeling_NLP/
l
r
rm `NLP(PROJECT).ipynb`
rm preproccessing
cp ../fcis-projects/Topic_Modeling_NLP.zip .
l
source /opt/anaconda3/bin/activate basepwd
pwd
c
l
unzip articles1.csv.zip
c
l
rm *zip
c
l
c
source /opt/anaconda3/bin/activate base
clear
ls
source /opt/anaconda3/bin/activate base
/opt/anaconda3/bin/python
clear
l
bash
z
ls
ll
code .
z .volatile/
l
z Documents/
l
code .
source /opt/anaconda3/bin/activate base
clear
cat /proc/sys/vm/overcommit_memory
sudo apt install flameshot
clear
flameshot gui
source /opt/anaconda3/bin/activate base
htop
source /opt/anaconda3/bin/activate base
pip install kneed 
htop
pip install wordcloud<\n>
source /opt/anaconda3/bin/activate base
 /usr/bin/env /opt/anaconda3/bin/python /home/ahmed/.vscode/extensions/ms-python.python-2023.8.0/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher 40809 -- /home/ahmed/dev/fcis-projects/Topic_Modeling_NLP/main.py 
lssource /opt/anaconda3/bin/activate base
l
ls
ls
z Topic_Modeling_NLP/
z fcis
l
z Topic_Modeling_NLP/
o
code .
clear
cargo run 
l
rm articles1.csv
l
l | get 0
ll | get 0
c
ll
c
l
ls
cl
c
2
c
2
2 + 2
clear
2 / 2 * 2 
l
z dev
l
z fcis-projects/
l
..
l
z rust
c
l
c
l
ls
c
z rust
c
l
z learn/
c
l
code .
c
cr
ls
z go
z rust
..
z go
z 
z tu
l
z rus
l
z -
l
z rust/
l
..
c
l
z go/
ls
mv `The Go Programming Language.pdf` `the-go-programming-language.pdf`
c
l
sk the-go-programming-language.pdf
c
z
c
cr
c
cr
c
cr
c
cr
c
cr
c
cr
c
cr
c
cr
c
cr
c
cr
c
cr
.cr
c
cr
kk
c
cr
c
cr
c
cr
z dev
l
z rust/
ls
z learn/
ls
z src/
c
l
nvim --version
vim main.rs
LV_BRANCH='release-1.3/neovim-0.9' bash <(curl -s https://raw.githubusercontent.com/LunarVim/LunarVim/release-1.3/neovim-0.9/utils/installer/install.sh)
bash
lvim
z 
z .config
l
z lvim
ls
lvim config.lua
c
l
z config.lua
lvim config.lua
z 
z .local/share/lunarvim/
c
l
z site/
l
z after/
ls
z ftplugin/
ls
..
l
s..
ls
..
l
z pack/
l
z lazy/
l
z opt/
l
..
ls
..
ls
..
ls
..
ls
z lv
z -
z lvim/
ls
z utils/
ls
..
ls
z lua/
ls
z lvim/
ls
lvim keymappings.lua
:q
lvim keymappings.lua
z
z .config/lvim/
ls
vim config.lua
lvim config.lua
z rust
c
l
z learn/
l
z lunvarvim
z .local/share/lunarvim/
l
z lvim/
ls
z lua/lvim/
l
z core/
ls
vim terminal.lua
lvim terminal.lua
..
l
z config/
l
vim defaults.lua
lvim defaults.lua
..
l
z core/
l
..
l
lvim keymappings.lua
cr
c
z
z .config/lvim/
l
lvim src/main.rs
cp ~/.local/share/lunarvim/lvim/utils/installer/config.example.lua ~/demo.lua
l
lvim demo.lua
rm demo.lua
lvim config.lua
l
c
l
sudo apt purge vim
z .config/nushell/
ls
vim config.nu
nvim config.nu
source ~/.config/nushell/config.nu
c
l
cr
z alacrity
z .config/
ls
z alacritty/
ls
c
l
vim colors.yml
l
vim fonts.yml
vim src/main.rs
vim alacritty.yml
sudo apt install kitty
z .config
ls
z kitty/
ls
vim kitty.conf
l
c
l
c
z kitty/
z .config/
ls
z kitty
ls
c
l
vim kitty.conf
z kitty
l
vim kitty.conf
ls
z
z kitty
l
ls
vim kitty.conf
z rust
ls
z learn/
ls
z learn/
ls
vim main.rs
z kitty
ls
vim src/main.rs
z learn
ls
vim kitty.conf
vim src/main.rs
z learn
l
<\n>
l
c
z downloads/
ks
l
z le
l
z kitt
ls
mv kitty.conf kitty.confb
z learn
ls
vim src/main.rs
mv kitty.confb kitty.conf
z learn
vim src/main.rs
z learn
vim src/main.rs
z learn
l
vim src/main.rs
z src
ls
git clone https://github.com/LukeSmithxyz/st<\n>cd st<\n>sudo make install
udo apt install libx11-dev
sudo apt install libx11-dev
l
rm config.h
sudo make install
git clone https://github.com/LukeSmithxyz/st<\n>cd st<\n>sudo make install
sudo apt install libxft-dev
sudo make install
sudo apt install harfbuzz
harfbuzz-devel
sudo apt install harfbuzz-devel
sudo apt install fontconfig
sudo apt install libX11 libXft libXinerama
sudo apt install libX11 libXft 
sudo apt install libX11 libxft 
sudo apt-get install -y libx11-dev
sudo apt-get install -y libxft-dev
sudo apt install libharfbuzz-dev 
sudo make install
ls
clear
ll
ls
z src
ls
z st/
ls
vim st.h
vim hb.h
vim =========+++++=
st
c
ls
st
z st
vim
z learn
l
vim src/main.rs
l
ll
l
ll
st
vim config.h
sudo make install
ls
st
vim config.h
sudo make install
ls
vim config.h
sudo make install
ls
clear
ls
st
z st
ls
z
z src/
ls
z st/
ls
vim config.mk
z src
ls
z st/
ls
sudo make install
vim st.h
..
ls
z st/
ls
z st-copyoutls
z st
ls
vim kitty.conf
vim config.h
sudo make install
st
ls
which st
l
sudo apt purge alacritty
sudo apt purge kitty
c
z learn
ls
z lear
l
vim src/main.rs
st
z st
ls
z 
z src/
ls
z st/
ls
z st
ls
vim config.h
sudo make install
z src/
z
z learn
ls
vim src/main.rs
suod apt install alacritty
sudo apt install alacritty
z learn
cr
z alacritty/
z .config/alacritty/
ls
vim fonts.yml
c
ls
c
vim src/main.rs
ls
c
l
c
ls
c
cr
c
cr
z .config
l
l | less
c
z lvim
l
vim config.lua
cr
c
cr
c
cr
rustc --explain E0277
c
vim src/main.rs
c
cr
z lvim
pwd
vim config.lua
vim main.md
vim config.lua
vim main.md
vim config.lua
vim main.mf
vim main.md
vim config.lua
vim main.md
vim config.lua
vim main.md
vim config.lua
bash
vim main.md
c
l
rm :wq
c
l
vim config.lua
z
c
l
z templates/
c
l
vim vim index.norg
l
vim index.norg
z lvim
pwd
vim config.lua
vim index.norg
vim config.lua
vim index.norg
vim config.lua
vim index.norg
z tut
z rust/
l
z lvim
pwd
vim config.lua
z lvim 
vim config.lua
vim src/main.rs
z lvim
l
vim config.lua
z
z .local/share/lunarvim/
l
z lvim/CHANGELOG.md
z l
z -
l
z lvim/
ls
z lua/lvim/
l
c
l
vim keymappings.lua
z core/
l
z core/
vim src/main.rs
vim comment.lua
cr
z larn
z lea
c
l
pwd
l
c
cr
c
cr
sudo apt install ascii
ascii -d
c
ascii -d
z lvim
pwd
vim config.lua
z 
z .local/share/lunarvim/
l
z lvim/
l
z lua/
ls
z lvim/
ls
vim keymappings.lua
ls
vim keymappings.lua
vim src/main.rs
cr
z rus
l
z learn/
c
l
cr
c
cr
vim src/main.rs
z learn/
c
l
vim src/main.rs
l
..
l
c
l
rm :q!
c
l
cr
c
cr
c
dr
c
cr
l
c
z learn
l
vim src/main.rs
cr
c
cr
c
z learn
l
cr
l
tree 
sudo apt install tree
tree
tree | table
tree | less
c
vim main.rs
c
l
man cargo
cargo -j
cargo -h
c
l
# cli --> command line interface
# gui --> graphical user interface
-->
----
---------------------------------------------
vim main.rs
z learn
vim s
vim src/main.rs
sudo apt install iterm
z Down
l
unzip iTerm2-3_4_19.zip
l
z iTerm.app/
l
z Contents/
l
..
l
..
l
c
z .config/
l
~/.config/fontconfig
z .config/
ls
mkdir fontconfig
z fontconfig/
sudo apt install focal
vim src/main.rs
z down
c
l
unzip Noto_Color_Emoji.zip
l
o
mv Noto_Color_Emoji.zip ~/.local/share/fonts/
z ~/.local/share/fonts
c
l
unzip Noto_Color_Emoji.zip
l
rm *zip
fc-cache -f -v
vim fonts.conf
z .config/fontconfig/
l
sudo apt install noto-fonts-emoji
z down
ls
mv noto-emoji-2.038.zip ~/.local/share/fonts/
z ~/.local/share/fonts
c
l
unzip *zip
kl
l
unzip noto-emoji-2.038.zip
o
l
c
l
mv ~/downloads/noto-emoji-2.038.tar.gz .
l
rm *gz
l
sudo apt install tilda
ls
cl
c
ls
c
l
c
ls
c
sudo apt purge tilda
mv ~/downloads/noto-emoji-2.038.tar.gz .
tar xf noto-emoji-2.038.tar.gz
rf *gz
fc-cache -f -v
vim fonts.conf
sudo apt install termite
sudo apt install gnome-shell-extension-pixelsaver<\n>gnome-extensions enable pixel-saver@deadalnix.me<\n>gsettings set org.gnome.Terminal.Legacy.Settings headerbar false
gsettings set org.gnome.Terminal.Legacy.Settings headerbar "@mb false"
l
ls
clea
rpwd
ls
c
ls
c
ls
ls
clear
ls
clear
ls
c
ls
l
ls
clear
lsls
clear
lsls
clear
l
clear
ls
clear
ls
clear
ls
pwd
clear
ls
c
l
z .config/gtk-3.0/
l
vim gtk.css
ls
clear
ls
gnome-terminal
l
sudo apt purge alacritty
c
z learn
c
l
vim src/main.rs
😻
sudo apt install alacritty
sudo purge gnome-terminal
sudo apt purge gnome-terminal
ls
sudo apt install gnome-terminal
😻
sudo apt purge gnome-terminal
ls
st
vim .config/
c
l
z .config/
mkdir nvim
z nvi
z nvim/
c
l
z .config/
ls
z
ll
c
ll
c
lla
vim .ideavimrc
z nvim/
c
z .config/
c
l
z nvim/
c
l
vim init.vim
z nvim
ls
vim init.vim
which nvim
pwd
mv init.vim init.lua
vim init.lua
nvim init.lua
mv init.lua init.vim
vim init.vim
nvim init.vim
vim init.vim
nvim init.vim
c
 nvim
z vim
z nvim
c
l
vim init.vim
git clone git@github.com:ahmed-yasser1/Game-Application-Success-Prediction.git
z Game-Application-Success-Prediction/
l
o
z
z dev
l
z fcis-projects/
ls
z game-prediction/
lc
c
l
z regression/
..
c
l
..
l
cp -r game-prediction/* ~/Game-Application-Success-Prediction/
z Game-Application-Success-Prediction/
z
z Game-Application-Success-Prediction/
c
l
git status
git add .
git status
c
l
z regression/
l
git status
git add .
..
l
git status
l
z regression/
l
git status
..
l
git add .
git status
l
o
git status
git add .
git status
git clone git@github.com:ahmed-yasser1/Game-Application-Success-Prediction.git
..
c
l
z Game-Application-Success-Prediction/
c
l
git status
git add .
git status
git commit -m "delete old files"
git status
git add .
git status
z regression/
c
l
..
c
ll
c
l
z regression/
c
l
c
lla
rm .git
rf .git
..
c
l
git status
npm i -g gitmoji-cli
sudo npm i -g gitmoji-cli
gitmoji -c
z Game-Application-Success-Prediction/
c
l
gitmoji -c
git commit -m "Adding classification models"
l
git status
git push
c
l
..
lc
c
l
rf ali
mv Game-Application-Success-Prediction/ ali
git clone git@github.com:ahmed-yasser1/Game-Application-Success-Prediction.git
z Game-Application-Success-Prediction/
c
l
git log
c
git status
ls
clear
z Game-Application-Success-Prediction/
git status
git add .
..
z -
c
l
z Game-Application-Success-Prediction/
ll
z .git/
c
l
vim HEAD
z refs/heads/
c
l
vim main
l
z ..
c
l
z remotes/
l
z origin/
c
l
vim HEAD
..
c
..
l
z ..
z refs/
c
l
z remotes/
c
l
z origin/
c
l
vim HEAD
..
c
l
..
pwd
l
z heads/
l
..
l
z remotes/
l
z origin/
l
vim HEAD
..
c
l
..
c
l
z remotes/
l
z origin/
l
ll
lla
..
c
l
..
c
l
..
c
l
z refs/
l
z remotes/
l
z origin/
l
..
l
..
l
..
l
z branches/
l
..
l
z refs
c
l
git log
c
..
c
git status
git add .
git status
git commit -m "Adding Final Models"
git status
git log
git push
z .git
c
l
z info
l
..
c
l
z hooks/
l
..
c
l
z objects/
l
..
l
z refs
c
l
z heads
l
vim ma
vim main
l
..
c
l
z remotes/
l
z origin/
c
l
vim HEAD
l
..
c
l
..
c
l
z remotes/
c
l
z origin/
c
l
vim HEAD
..
c
l
pwd
l
z origin/
c
l
ll
c
l
vim HEAD
c
..
c
l..
c
l
..
c
l
..
c
l
vim HEAD
..
l
git status
gi tpush
git push
l
lla
z .gi
l
c
l
z refs
l
z heads
l
vim main
git log
c
l
ll
..
c
l
z remotes/
c
l
ll
lla
z origin/
c
l
lla
vim HEAD
lla
pwd
cat HEAD
c
l
vim HEAD
..
ll
..
l
rf ali
c
l
z src
c
l
git clone git@github.com:ahmed-yasser1/Game-Application-Success-Prediction.git
z Game-Application-Success-Prediction/
c
l
git log
git status
git reset~1 --HARD
git reset --hard HEAD~1
git status
ll
git log
git reset --hard HEAD~1
l
git reset --hard HEAD~1
ll
git log
l
git reset --hard HEAD~1
git log
l
o
git status
git add .
git status
git commit -m "delete files"
git status
git log
o
git status
git add .
git status
git commit -m "Adding Final Models"
git status
git push
man git push
git push -f
code .
source /opt/anaconda3/bin/activate base
l
clear
git status
git add .
git status
git commit -m "fix some cells' outputs"
git status
git push 
z report/
c
l
rm classification.md
vim regression.md
git status
git add .
git status
l
mv regression.md report.md
rm *pdf
c
l
git add .
git status
git commit -m "reanme report file"
git status
git push
pwd
z
c
l
z src
c
l
rf Game-Application-Success-Prediction/
c
l
..
c
l
rf Game-Application-Success-Prediction/
c
l
z src
c
l
.
..
c
l
z dev
z .config/lvim/
c
l
vim config.lua
z learn
c
l
wget -q0- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
sudo apt install wget
y
wget -q0- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
nvm --version
vim src/main.rs
z learn
node --version
vim src/main.rs
bash
which node
sudo apt purge ndoe
sudo apt purge node
sudo rm /usr/bin/node
sudo ln /home/ahmed/.nvm/versions/node/v20.2.0/bin/node /usr/bin/node
sudo ln -s /home/ahmed/.nvm/versions/node/v20.2.0/bin/node /usr/bin/node
c
ndoe --version
node --version
z Game-Application-Success-Prediction/
z fcis-projects/
c
l
git statu
git status
..
c
l
z Topic_Modeling_NLP.zip
c
l
giz Topic_Modeling_NLP.zip
z Topic_Modeling_NLP/
c
l
git status
gitmoji -c
c
sudo apt update
sudo apt list --upgradable
suod apt upgrade
sudo apt upgrade
c
cr
c
cr
c
cr
c
cr
c
z nvim
c
l
mv init.vim init.vim.bak
c
vim init.lua
vim 
nvim
nvim .
z .config/alacritty/
c
l
vim alacritty.yml
ls
c
l | less
c
l
r i.jpeg doc.jpeg
l
rm i.jpeg
rm doc.jpeg
c
k
l
c
z nvim
z 
z lvim
pwd
vim config.lua
c
l
z templates/
c
l
rf Game-Application-Success-Prediction/
rf index.norg
r my-first-book/
c
l
rf my-first-book/
c
l
z lvim
vim config.lua
z -
c
l
vim index.norg
sudo apt install emacs
emacs
emacs --version
vim --version
z src
z init.vim
z nvim
c
l
rm init.lua
mv init.vim.bak init.vim
git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs<\n>~/.config/emacs/bin/doom install
z nues
z .config/nushell/
c
l
vim config.nu
doom sync
doom --version
z .config/nushell/
vim config.nu
doom sync
z .emacs.d/
c
l
ll
lla
ll
..
ll
c
lla
z .config/
ls
z .config/nushell/
c
l
vim config.nu
doom sync
emacs
emacsclient -c -a 'emacs'
udo apt purge emacs
sudo apt purge emacs
cr
c
cr
clear
cr
vim
c
cr
[{name: ahmed, age: 20}, {name: ali}]
[{name: ahmed, age: 20}, {name: ali}].name
[{name: ahmed, age: 20}, {name: ali}].age
[{name: ahmed, age: 20}, {name: ali}].age?
c
let greet = {|name| print $"Hello ($name)"};
do $greet "Ahmed"
let greet = {|name, age| print $"nice to meet you($name), your age is ($age)"}
do $greet "Ahmed" 20
let greet = {|name, age| print $"nice to meet you ($name), your age is ($age)"}
do $greet "Ahmed" 20
# this is called closures
c
mut x  = 1
$x
if true {<\n>$x += 2000<\n>}
print $x
mut y = 1
$y += 2000
y += 2000
$y += 2000
print $y
$nothing
l ahmed
ls ahmed
ls ahmed 
ls ahmed  | null
ls ahmed | null
ls ahmed| null
ls ahmed | null
sys
sys.host
sys
sys.host
c
sys
sys | get host
sys | get cpu
z .config/nushell/
c
sys | get cpu
c
sys | get cpu
sys | get cpu.name
sys | get cpu.11
sys | get cpu.11.name
sys
c
sys
q
c
sys
sys.host
sys | .host
sys
sys | get cpu
cpu
sys | get cpu.name
sys | get cpu.name.11
sys
c
z Topic_Modeling_NLP/
z fcis
l
z Topic_Modeling_NLP.zip
z Topic_Modeling_NLP/
c
l
z utils/
c
l
open stops.json
cat stops.json
ll
open stops.json
c
l
open stops.json
open stops.json.days
lc
c
z learn
l
code .
cr
c
cr
c
cr
z learn
c
l
nvim --version
vim src/main.rs
ls
lsilsj:q!
sudo apt install obsidian
z Down
c
l
rm iTerm.app/
rf iTe*
l
rm img9.png
ll
chmod u+x Obsidian-1.3.4.AppImage
sudo mv Obsidian-1.3.4.AppImage /usr/bin/obsidian
obsidian 
z /usr/share/applications/
l
vim obsidian.desktop
sudo vim obsidian.desktop
sudo lvim obsidian.desktop
sudo nvim obsidian.desktop
l
z dev
c
l
z Topic_Modeling_NLP/
c
l
z Topic_Modeling_NLP.zip
z Topic_Modeling_NLP/
l
lla
z dest
c
l
lla
z with-lemmatization/
c
lla
z templates/c
tempfile 
z
z nush
c
l
vim config.nu
pwd
cp -r /home/ahmed/dev/Topic_Modeling_NLP/Topic_Modeling_NLP/dest/with-lemmatization/.obsidian/ ~/templates/
z dev
c
l
z fcis-projects/
c
l
z game-prediction/
c
l
z report/
c
la
lla
rm .obsidian/
rf .obsidian/
c
obs
cp ~/.config/nvim/init.vim ~/.vimrc
z tep
z temp
c
l
lla
z .obsidian/
c
l
vim app.json
z temp
c
l
z .obsidian/
c
cp ~/.vimrc .
l
lla
mv .vimrc .obsidian.vimrc
z game
c
l
z report
c
l
lla
rf .obsidian/
obs
z game
z
l
z -
c
l
z report/
c
l
lla
z .obsidian/
c
ll
lla
vim .obsidian.vimrc
z report
c
l
mv .obsidian/.obsidian.vimrc .
z report
lla
vim .obsidian.vimrc
c
l
pwd
lla
z plugins/
\c
l
..
c
l
..
c
l
lla
mv .obsidian.vimrc .obsidian.vimrc
c
lla
cat .obsidian.vimrc
vim .obsidian.vimrc
l
rm templates/.obsidian/
rf templates/.obsidian/
z learn
c
l
z
c
l
z repor
c
l
lla
cp -r .obsidian ~/templates/.obsidian
cp -r .obsidian.vimrc ~/templates/.obsidian.vimrc
z nushe
c
l
vim config.nu
z
c
l
z down
c
l
dpkg --install drawio-amd64-21.2.8.deb
sudo dpkg --install drawio-amd64-21.2.8.deb
z down
c
l
sudo dpkg --install altaqwaa_3.0.1_amd64.deb
vim main.rs
l
rm report.pdf
c
l
z down
c
l
c
z dev
c
l
rf Topic_Modeling_NLP/
z fcis-projects/
c
l
z Topic_Modeling_NLP.zip
l
rf CS-13/
c
l
z Topic_Modeling_NLP/
l
z des
z dest/
l
..
c
l
..
l
rf Topic_Modeling_NLP/
unzip Topic_Modeling_NLP.zip
c
l
z Topic_Modeling_NLP.zip
z Topic_Modeling_NLP/
c
l
code .
z Topic_Modeling_NLP/
c
l
.;
..
c
l
..
c
l
rf Topic_Modeling_NLP/
unzip Topic_Modeling_NLP.zip
c
z Topic_Modeling_NLP/
c
l
code .
source /opt/anaconda3/bin/activate base
z Topic_Modeling_NLP/
c
l
..
l
vim main.py
bash
ls
z utils
c
l
touch preprocessing
mv preprocessing preprocessing.py
ls
c
l
c
l
o
bash
rf articles1.csv
c
l
z templates/
c
l
git clone git@github.com:salllwaaa/Topic_Modeling_NLP.git
c
l
z Topic_Modeling_NLP/
c
l
rm `NLP(PROJECT).ipynb`
c
l
rm preproccessing
c
l
o
git log
z te
c
l
z Topic_Modeling_NLP/
c
l
vim README.md
c
l
git status
git add .
git status
gitmoji -c
git log
git status
git push
cr
nvim
z nvim
c
l
mv init.vim init.vim.bak
source /opt/anaconda3/bin/activatec
clear
c
ls
c
z nvim
c
l
rm code.png
c
l
mkdir notes
z notes
..
c
l
rf notes/
c
z src
c
l
git clone git@github.com:ahmed-yasser1/CS-Notes.git
l
z CS-Notes/
c
l
obs
c
l
c
cargo run
c
z nvim
c
l
vim init.vim
z nvim
l
vim init.vim
nvim
c
l
clear
cargo run
c
z fcis
z
l
z tutorial/
c
l
z fcis
c
l
rf articles1.csv
c
l
z `6-term/`
c
l
rm nlp.Lf-MeYmP.zip.part
rm nlp.zip
c
l
z nlp.zip
l
z nlp/
c
l
..
c
l
unzip nlp.zip
l
rm *zip
cr
z
z nvim
c
l
vim init.vim
c
cr
c
cr
c
z src
l
c
z src
c
l
git clone git@github.com:ahmed-yasser1/dotfiles.git
z dotfiles/
obs
lla
z .config/code
c
z .config
c
l
z code
c
l
la
c
lla
pwd
z
c
l
z .config
c
l
z Code/
c
l
z user
c
l
z User/
c
l
pwd
cp /home/ahmed/.config/Code/User/keybindings.json .
cp /home/ahmed/.config/Code/User/settings.json
cp /home/ahmed/.config/Code/User/settings.json .
c
l
vim settings.json
cp -r /home/ahmed/.config/Code/User/snippets/ .
mkdir vscode
rf vscode/
c
l
git status
git add .
gitmoji -c
git status
git push
cp -r ~/.config/nvim/ .
cp -r ~/.config/nushell/
